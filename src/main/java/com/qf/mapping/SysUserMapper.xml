<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.qf.entity.SysUser">
    <id column="usr_id" jdbcType="INTEGER" property="usrId" />
    <result column="usr_name" jdbcType="VARCHAR" property="usrName" />
    <result column="usr_password" jdbcType="VARCHAR" property="usrPassword" />
    <result column="usr_role_id" jdbcType="INTEGER" property="usrRoleId" />
    <result column="usr_flag" jdbcType="INTEGER" property="usrFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    usr_id, usr_name, usr_password, usr_role_id, usr_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where usr_id = #{usrId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where usr_id = #{usrId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qf.entity.SysUser">
    insert into sys_user (usr_id, usr_name, usr_password, 
      usr_role_id, usr_flag)
    values (#{usrId,jdbcType=INTEGER}, #{usrName,jdbcType=VARCHAR}, #{usrPassword,jdbcType=VARCHAR}, 
      #{usrRoleId,jdbcType=INTEGER}, #{usrFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usrId != null">
        usr_id,
      </if>
      <if test="usrName != null">
        usr_name,
      </if>
      <if test="usrPassword != null">
        usr_password,
      </if>
      <if test="usrRoleId != null">
        usr_role_id,
      </if>
      <if test="usrFlag != null">
        usr_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usrId != null">
        #{usrId,jdbcType=INTEGER},
      </if>
      <if test="usrName != null">
        #{usrName,jdbcType=VARCHAR},
      </if>
      <if test="usrPassword != null">
        #{usrPassword,jdbcType=VARCHAR},
      </if>
      <if test="usrRoleId != null">
        #{usrRoleId,jdbcType=INTEGER},
      </if>
      <if test="usrFlag != null">
        #{usrFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.entity.SysUser">
    update sys_user
    <set>
      <if test="usrName != null">
        usr_name = #{usrName,jdbcType=VARCHAR},
      </if>
      <if test="usrPassword != null">
        usr_password = #{usrPassword,jdbcType=VARCHAR},
      </if>
      <if test="usrRoleId != null">
        usr_role_id = #{usrRoleId,jdbcType=INTEGER},
      </if>
      <if test="usrFlag != null">
        usr_flag = #{usrFlag,jdbcType=INTEGER},
      </if>
    </set>
    where usr_id = #{usrId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.entity.SysUser">
    update sys_user
    set usr_name = #{usrName,jdbcType=VARCHAR},
      usr_password = #{usrPassword,jdbcType=VARCHAR},
      usr_role_id = #{usrRoleId,jdbcType=INTEGER},
      usr_flag = #{usrFlag,jdbcType=INTEGER}
    where usr_id = #{usrId,jdbcType=INTEGER}
  </update>
  <!-- 额外增加的内容 -->
   <select id="selectByName" parameterType="string" resultType="sysUser">
  	select  
  	<include refid="Base_Column_List" />
  	from sys_user
  	where usr_name=#{name} and usr_flag=1 
  </select>
  
  <select id="selectAll" resultType="com.qf.vo.VUser">
  	 select u.usr_id,u.usr_name,r.role_name,u.usr_flag from sys_user u
  	inner join sys_role r
  	on u.usr_role_id = r.role_id
  </select>
  <!-- 一次插入多条语句 -->
  <insert id="addBatch" parameterType="list">
  insert into sys_user (<include refid="Base_Column_List" />)
  values
  <foreach collection="list" item="item" separator=",">
  (#{item.usrId},#{item.usrName},#{item.usrPassword},#{item.usrRoleId},#{item.usrFlag})</foreach>
  </insert>
  
  <select id="findById" parameterType="int" resultType="com.qf.entity.SysUser">
    select * from sys_user u where u.usr_id = #{id} 
  </select>
	
	<delete id="delete" parameterType="int">
	update sys_user set usr_flag = 0 where usr_id = #{usrId}
	</delete>
	
	<select id="findLoginUser" parameterType="int" resultType="com.qf.vo.VUser">
	 select u.usr_id,u.usr_name,r.role_name,u.usr_flag from sys_user u
  	inner join sys_role r
  	on u.usr_role_id = r.role_id
  	where u.usr_id = #{id}
	</select>
	
	<select id="findByCondition" parameterType="map" resultType="com.qf.vo.VUser">
	select u.usr_id ,u.usr_name ,r.role_name ,u.usr_flag  from sys_user u
  	inner join sys_role r
  	on u.usr_role_id = r.role_id
  	<where>
  		<if test="usrName!=null">
  		and u.usr_name like concat('%',#{usrName},'%')
  		</if>
  		<if test="roleName!=null">
	  	 and r.role_name like concat('%',#{roleName},'%') 
  		</if>
  		<if test="usrFlag!=null">
   		 and u.usr_flag = #{usrFlag}
  		</if>
  	</where>
	</select>
	
	<select id="findByRoleId" resultType="com.qf.entity.SysUser">
		select * from sys_user where usr_role_id = 2 
	</select>
</mapper>


